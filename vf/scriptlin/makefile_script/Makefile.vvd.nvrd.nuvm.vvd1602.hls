#*****************************************************************************
# This is the makeflie to control the whole verification environment
#
# Author: Qiu Chao 
# Date  : 2018/11/20
#
#*****************************************************************************
SHELL=/bin/bash

-include Makefile.flist

USE_COV=1
ifeq ($(USE_COV),1)
    COV_OPT = -cover bces -incr
else
    COV_OPT =
endif

lib_mode= -L $(VVD1602_LIBRARY_PATH)/secureip \
		-L $(VVD1602_LIBRARY_PATH)/simprims_ver \
		-L $(VVD1602_LIBRARY_PATH)/unifast_ver \
		-L $(VVD1602_LIBRARY_PATH)/unimacro_ver \
		-L $(VVD1602_LIBRARY_PATH)/unisims_ver 

.PHONY:preparation
preparation: chautotbfile linkfile vloglist xsimprj

autotbfile=$(shell find $(RTL_ROOT)/sim/verilog -name *.autotb.v)

########Get the Key word from the config file.(such as rand,return rand)
define getKeyWordFromFileFunc
	$(findstring $(1),$(shell cat $(2)))
endef
RAND_KEY	=$(call getKeyWordFromFileFunc,randTmp,$(autotbfile))

##########Get the testbench top name from the file.(such as `define AUTOTB_TOP apatb_Acc,return apatb_Acc)
TB_TOP_NAME=$(word 3,$(shell grep "define AUTOTB_TOP\s" $(autotbfile)))

####Modified the xxx.autotb.v
.PHONY:linkfile
linkfile:
	@cp -rf $(RTL_ROOT)/sim/verilog/*.dat $(RUNSIM_ROOT)/run_$(PAR_TC) ; \
	if [[ ! -d $(RTL_ROOT)/sim/tv ]] ; then \
		ln -s $(RTL_ROOT)/sim/tv $(RUNSIM_ROOT)/tv ; \
	fi 

#cp -rf $(RTL_ROOT)/sim/verilog/*.dat $(RUNSIM_ROOT)/run_$(PAR_TC) 
####Modified the xxx.autotb.v
####change rand to randTmp only one Time
####change continue to continueTmp only one Time
.PHONY:chautotbfile
chautotbfile:
	@if [[ ! -d $(RTL_ROOT)/sim ]] ; then \
	   	echo -e "\033[0;31m it should have $(RTL_ROOT)/sim path , when you simulate hls project \033[0m" ; \
	else \
		if [[ ! -d $(RTL_ROOT)/sim/verilog ]] ; then \
	   		echo -e "\033[0;31m it should have $(RTL_ROOT)/sim/verilog path , when you simulate hls project \033[0m" ; \
		else \
			if [[ ! -e $(autotbfile) ]] ; then \
	   			echo -e "\033[0;31m it should have $(autotbfile) file , when you simulate hls project \033[0m" ; \
			else \
	    		if [[ $(words $(RAND_KEY)) == 0 ]] ; then \
	   				echo -e "modified rand to randTmp " ; \
	   				echo -e "modified continue to continueTmp " ; \
					sed -i "s/rand/randTmp/g"   $(autotbfile) ; \
					sed -i "s/continue/continueTmp/g"   $(autotbfile) ; \
				fi ; \
			fi ; \
		fi ; \
	fi ; 

####Generate the Makfile.flist
.PHONY:vloglist
vloglist:
	####Write the "VLOG_LIST := \" to the Makefile.flist
	@echo "VLOG_LIST := \\" 					> $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	####Get the flist to Makefile.flist,(such as xxx.v xxxx.sv,and so on)
	find $(RTL_ROOT) 			-name \*.vh >>$(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	find $(RTL_ROOT) 			-name \*.v 	>>$(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	find $(RTL_ROOT) 			-name \*.sv	>>$(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	find $(BTC_ROOT)/$(PAR_TC) 	-name \*.v 	>>$(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	find $(BTC_ROOT)/$(PAR_TC) 	-name \*.sv >>$(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	####Add \ in the end of line.(such as xxx.v conver to  xxx.v \ and so on)
	####Attention:$ has other means in the makefile,so we use $$ instead of $.
	####"\.v \\\" means ".v \"
	sed -i "s/\.vh$$/\.vh \\\/g"   $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	sed -i "s/\.v$$/\.v \\\/g"   $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	sed -i "s/\.sv$$/\.sv \\\/g" $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	####Filter the (_bb.v,_inst.v ...)in the ipcore folder 
	#### ".*" can math every char every length
	sed -i '/ipcoresyn/d' $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	sed -i '/ipcoresim.*_bb/d' $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	sed -i '/ipcoresim.*_inst\./d' $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; \
	sed -i '/ipcoresim.*_xilinx\./d' $(RUNSIM_ROOT)/run_$(PAR_TC)/Makefile.flist ; 

####Generate the xsim.prj file
.PHONY:xsimprj
xsimprj:
	##Get the .v and .sv file to xsim.prj
	find $(RTL_ROOT) 			-name \*.v 	>$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	find $(RTL_ROOT) 			-name \*.sv	>>$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	find $(BTC_ROOT)/$(PAR_TC) 	-name \*.v 	>>$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	find $(BTC_ROOT)/$(PAR_TC) 	-name \*.sv >>$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##Delete the line with "/ipcoresyn/","ipcoresim..._bb",and so on.
	sed -i '/ipcoresyn/d' 			    			$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	sed -i '/ipcoresim.*_bb/d' 		    			$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	sed -i '/ipcoresim.*_inst\./d' 	    			$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	sed -i '/ipcoresim.*_xilinx\./d'    			$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##When the line tail has .v , add "verilog xil_defaultlib ""on the line head.
	sed -i '/\.v/ s/^/verilog xil_defaultlib \"/g'  $(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##When the line tail has .sv , add "sv xil_defaultlib ""on the line head.
	sed -i '/\.sv/ s/^/sv xil_defaultlib \"/g'   	$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##Add " in the end of every line.
	sed -i 's/\.v/\.v\"/g' 							$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	sed -i 's/\.sv/\.sv\"/g' 						$(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##Add "verilog xil_defaultlib "$(VF_ROOT)/vf/glbl/glbl.v" to the xsim.prj
	echo "verilog xil_defaultlib \"$(VF_ROOT)/glbl/glbl.v\""	>> $(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	##Add "nosort" to the xsim.prj
	echo "nosort"	>> $(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; 

.PHONY:sim
sim:
	xvlog -work worklib $(VLOG_LIST) ; \
	xvlog -prj $(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj ; \
	xelab -debug all -prj $(RUNSIM_ROOT)/run_$(PAR_TC)/xsim.prj -s tb_dut_top.snapshot worklib.$(TB_TOP_NAME) ; \
	xsim tb_dut_top.snapshot -gui -wdb xsim.wdb

